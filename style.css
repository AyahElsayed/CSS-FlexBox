.box{
    color: #fff;
    font-size: 20px;
    text-align: center;
    text-shadow: 4px 4px 0 rgba(0, 0, 0, 1);
    padding: 10px;
}
.box1{background-color: rosybrown;}
.box2{background-color: rgb(160, 25, 25);}
.box3{background-color: rgb(42, 145, 64);}
.box4{background-color: rgb(31, 5, 5);}
.box5{background-color: rgb(136, 43, 100);}
.box6{background-color: rgb(5, 15, 7);}
.box7{background-color: rgb(37, 2, 83);}
.box8{background-color: rgb(88, 21, 21);}
.box9{background-color: rgb(4, 156, 144);}
.box10{background-color: rgb(5, 59, 80);}

.container{
    display: flex;
    
}
.box{
    flex: 1;
}
.box2{
    flex: 2;
    /* as well as there is extra space 
    this item have the double width  */
}
/* justify-content => 
        mean how are the items aligned on the main axis 
        main axis => by default from left to right 
        cross axis => by default from top to bottom
    default value: flex-start
 */

 /* when change flex-direction: columns 
        main axis => by default from top to bottom
        cross axis => by default from left to right 
  */

  /* align-items => 
        mean how are the items aligned on the cross axis
        default value:stretch

        align-items:baseline; =>
        make the text in all at the same line
  */

  /* align-content =>
    actualy only works when we have multiple lines of code 
    wirk with cross axis 
    default value:stretch
  */

  /* align-self =>
    applied to individual item and overwrite its value 
   */

   /* flex: 1 =>
        when ther an extra space , boxes fill all the space and all have the same width
        until other item take different no. of flex 
    */